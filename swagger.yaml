---
swagger: "2.0"
info:
  version: "4.0.0"
  title: "XKCD v4"
host: "xxxxxxxxxx.execute-api.us-west-2.amazonaws.com"
basePath: "/demo"
schemes:
- "https"
paths:
  /first:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/comic"
        404:
          description: "404 response"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: "$util.parseJson($input.json('$.body'));"
          .*Error from xkcd.com.*:
            statusCode: "404"
        requestTemplates:
          application/json: "{\n    \"comicId\": 1\n}"
        uri: "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:xxxxxxxxxx:function:xkcdSpecificComicV4/invocations"
        passthroughBehavior: "never"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
  /latest:
    get:
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/comic"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        uri: "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:xxxxxxxxxx:function:xkcdLatestComicV4/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  /random:
    get:
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/comic"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        uri: "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:xxxxxxxxxx:function:xkcdRandomComic/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  /{comicId}:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "comicId"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/comic"
          headers:
            Content-Type:
              type: "string"
        404:
          description: "404 response"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Content-Type: "'application/json'"
            responseTemplates:
              application/json: "$util.parseJson($input.json('$.body'));"
          .*Error from xkcd.com.*:
            statusCode: "404"
        requestTemplates:
          application/json: "{\n    \"comicId\": \"$input.params().path.comicId\"\n\
            }"
        uri: "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:xxxxxxxxxx:function:xkcdSpecificComicV4/invocations"
        passthroughBehavior: "never"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
definitions:
  comic:
    type: "object"
    properties:
      alt:
        type: "string"
      day:
        type: "string"
      img:
        type: "string"
      link:
        type: "string"
      prev_link:
        type: "string"
      next_link:
        type: "string"
      month:
        type: "string"
      news:
        type: "string"
      num:
        type: "number"
      safe_title:
        type: "string"
      title:
        type: "string"
      transcript:
        type: "string"
      year:
        type: "string"
